import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { HydrationOverlay } from "@builder.io/react-hydration-overlay";

const geistSans = localFont({
    src: "./fonts/GeistVF.woff",
    variable: "--font-geist-sans",
    weight: "100 900",
});
const geistMono = localFont({
    src: "./fonts/GeistMonoVF.woff",
    variable: "--font-geist-mono",
    weight: "100 900",
});

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};
const polyfillScript = `
  // it's safe to access document here since the page is not evaluated by server, just rendered
  (function attachShadowRoots(root = document) {
    const isShadowRootModeSupported = HTMLTemplateElement.prototype.hasOwnProperty("shadowRootMode");
    if (isShadowRootModeSupported) return;

    root
    .querySelectorAll('template[shadowrootmode]')
    .forEach(template => {
      const mode = template.getAttribute('shadowrootmode');
      const shadowRoot = template.parentElement.attachShadow({ mode });
      shadowRoot.appendChild(template.content);
      template.remove();
      attachShadowRoots(shadowRoot);
    });
  })();
`;
export default function RootLayout({
    children,
}: Readonly<{
    children: React.ReactNode;
}>) {
    return (
        <html lang="en">
            <body className={`${geistSans.variable} ${geistMono.variable}`}>
                <HydrationOverlay>{children}</HydrationOverlay>
                <script dangerouslySetInnerHTML={{ __html: polyfillScript }} />
            </body>
        </html>
    );
}
